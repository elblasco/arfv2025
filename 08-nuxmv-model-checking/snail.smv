MODULE main
FROZENVAR
  good : array 0..1 of 1..10;
  bad  : array 0..1 of 1..10;
VAR
  pos   : 0..10;
  turn  : {DICE, GOOD, BAD};
  steps : 0..100;
  dice  : 1..3;


ASSIGN
  init(pos)   := 1;
  init(steps) := 0;
  init(turn)  :=DICE;

INIT
      good[0] != good[1] & bad[0] != bad[1]
    & good[0] != bad[0] & good[0] != bad[1]
    & good[1] != bad[0] & good[1] != bad[1];

ASSIGN
  next(turn) := case
    next(pos) = good[0] | next(pos) = good[1] : GOOD;
    next(pos) = bad[0]  | next(pos) = bad[1]  : BAD;
    TRUE: DICE;
  esac;

  next(steps) := case
    turn = DICE : min(steps + 1, 100);
    TRUE        : steps;
  esac;

  next(pos) := case
    turn = DICE : min(pos + dice, 10);
    turn = GOOD : min(pos + 2, 10);
    turn = BAD  : max(pos - 2, 0);
  esac;

TRANS
  (turn  = DICE -> next(dice) != dice) &
  (turn != DICE -> next(dice)  = dice);

INVARSPEC pos=10 -> steps > 2;


